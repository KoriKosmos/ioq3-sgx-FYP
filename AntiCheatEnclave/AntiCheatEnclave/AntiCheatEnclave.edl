enclave {
    from "sgx_tstdc.edl" import *;

    trusted {
        /* define ECALLs here. */

        public sgx_status_t ecall_generate_keypair();

        public sgx_status_t ecall_get_public_key(
            [out, size=len] uint8_t* pub_key_x,
            [out, size=len] uint8_t* pub_key_y,
            size_t len
        );

        public void ecall_validate_shot(
            int attacker_id,
            int target_id,
            int weapon_type,
            int hit_location,
            float distance,
            int damage,
            [out] int* is_valid
        );

        public sgx_status_t ecall_store_host_pubkey(
            [in, size=len] const uint8_t* host_pubkey_x,
            [in, size=len] const uint8_t* host_pubkey_y,
            size_t len
       );

        public sgx_status_t ecall_derive_shared_secret();

        public sgx_status_t ecall_encrypt_message(
            [in, size=msg_len] const uint8_t* plaintext,
            size_t msg_len,
            [in, size=12] const uint8_t* iv,
            [out, size=msg_len] uint8_t* ciphertext,
            [out, size=16] uint8_t* mac
        );

        public sgx_status_t ecall_decrypt_message(
            [in, size=ct_len] const uint8_t* ciphertext,
            [in, size=tag_len] const uint8_t* tag,
            [in, size=iv_len] const uint8_t* iv,
            size_t ct_len,
            size_t tag_len,
            size_t iv_len,
            [out, size=ct_len] uint8_t* plaintext
        );



    };

    untrusted {
        /* define OCALLs here. */

        void ocall_log_message([in, string] const char* message);

    };
};

